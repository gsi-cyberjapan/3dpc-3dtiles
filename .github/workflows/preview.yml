name: Deploy PR previews

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  PAGE_DIR: pr-preview-${{ github.event.pull_request.number }}

jobs:
  build-and-commit:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
            if [ -f "${{ github.workspace }}/yarn.lock" ]; then
              echo "manager=yarn" >> $GITHUB_OUTPUT
              echo "command=install" >> $GITHUB_OUTPUT
              echo "runner=yarn" >> $GITHUB_OUTPUT
              exit 0
            elif [ -f "${{ github.workspace }}/package.json" ]; then
              echo "manager=npm" >> $GITHUB_OUTPUT
              echo "command=ci" >> $GITHUB_OUTPUT
              echo "runner=npx --no-install" >> $GITHUB_OUTPUT
              exit 0
            else
              echo "Unable to determine package manager"
              exit 1
            fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: |
          export IS_PREVIEW=true
          export PR_NUMBER=${{ github.event.pull_request.number }}
          BASE_PATH=/${GITHUB_REPOSITORY##*/}/pr-preview-${{ github.event.pull_request.number }} ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Move out directory
        run: mv out /tmp/out
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: Commit changes to gh-pages branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "action@github.com"
          mkdir -p ${{ env.PAGE_DIR }}
          cp -r /tmp/out/* ${{ env.PAGE_DIR }}
          git add .
          git commit -m "Deploy PR preview for #${{ github.event.pull_request.number }}"
          git push origin gh-pages
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const repoName = process.env.GITHUB_REPOSITORY.split('/')[1];
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `プレビューがデプロイされました：https://${context.repo.owner}.github.io/${repoName}/pr-preview-${context.issue.number}`
            })

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: Remove preview directory
        run: |
          rm -rf ${{ env.PAGE_DIR }} || exit 0
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Remove PR preview for #${{ github.event.pull_request.number }}" && git push origin gh-pages || echo "No changes to commit"