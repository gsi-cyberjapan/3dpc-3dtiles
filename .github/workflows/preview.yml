name: Deploy PR previews

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  PAGE_DIR: pr-preview-${{ github.event.pull_request.number }}

jobs:
  build:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          generator_config_file: next.config.mjs
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-
      - name: Install dependencies
        run: bun install
      - name: Build with Next.js
        run: |
          export IS_PREVIEW=true
          export PR_NUMBER=${{ github.event.pull_request.number }}
          BASE_PATH=/${{ env.PAGE_DIR }} bunx next build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out
          name: github-pages-${{ github.event.pull_request.number }}

  deploy:
    if: github.event.action != 'closed'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages-${{ github.event.pull_request.number }}
          preview: true
          path: ${{ env.PAGE_DIR }}
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Preview deployed to: ${{ steps.deployment.outputs.page_url }}`
            })

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete preview deployment
        uses: actions/github-script@v7
        with:
          script: |
            const result = await github.rest.repos.getPages({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            for (const preview of result.data.preview_deployments || []) {
              if (preview.path === `pr-preview-${context.issue.number}`) {
                await github.rest.repos.deletePagesSite({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: preview.id
                });
                console.log(`Deleted preview deployment for PR #${context.issue.number}`);
                break;
              }
            }